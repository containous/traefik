[backends]{{range $service := .Services}}
    {{range $partition := $service.Partitions}}
      {{if eq $partition.ServiceKind "Stateless"}}
        [backends."{{$service.Name}}".LoadBalancer]
        method = "drr"
            
        [backends."{{$service.Name}}".circuitbreaker]
        expression = "NetworkErrorRatio() > 0.5"

        {{range $instance := $partition.Instances}}
          {{if and (isHealthy $instance) (hasHTTPEndpoint $instance)}}
            
            [backends."{{$service.Name}}".servers."{{$instance.ID}}"]
            url = "{{getDefaultEndpoint $instance}}"
            weight = 1

          {{end}}
        {{end}}
      {{else if eq $partition.ServiceKind "Stateful"}}
        {{range $replica := $partition.Replicas}}
          {{if and (isPrimary $replica) (isHealthy $replica) (hasHTTPEndpoint $replica)}}
          
            {{$backendName := (print $service.Name $partition.PartitionInformation.ID)}}
            [backends."{{$backendName}}".servers."{{$replica.ID}}"]
            url = "{{getDefaultEndpoint $replica}}"
            weight = 1

            [backends."{{$backendName}}".LoadBalancer]
            method = "drr"
                
            [backends."{{$backendName}}".circuitbreaker]
            expression = "NetworkErrorRatio() > 0.5"
          
          {{end}}    
        {{end}}
      {{end}}
    {{end}}
{{end}}

[frontends]{{range $service := .Services}}
  {{if hasServiceLabel $service "expose"}}
    {{if eq $service.ServiceKind "Stateless"}}
    
    [frontends."{{$service.Name}}"]
    backend = "{{$service.Name}}"

    
    {{if hasServiceLabel $service "frontend.passHostHeader"}}
      passHostHeader = {{getServiceLabelValue $service "frontend.passHostHeader" }}
    {{end}}

    {{if hasServiceLabel $service "frontend.whitelistSourceRange"}}
      whitelistSourceRange = {{getServiceLabelValue $service "frontend.whitelistSourceRange" }}
    {{end}}

    {{if hasServiceLabel $service "frontend.priority"}}
      priority = {{getServiceLabelValue $service "frontend.priority"}}
    {{end}}

    {{if hasServiceLabel $service "frontend.basicAuth"}}
      basicAuth = {{getServiceLabelValue $service "frontend.basicAuth"}}
    {{end}}

    {{if hasServiceLabel $service "frontend.entryPoints"}}
      entryPoints = {{getServiceLabelValue $service "frontend.entryPoints"}}
    {{end}}
      
    [frontends."{{$service.Name}}".routes.default]
    rule = "{{getServiceLabelValue $service "frontend.rule"}}"
    
    {{else if eq $service.ServiceKind "Stateful"}}
      {{range $partition := $service.Partitions}}
        {{$partitionId := $partition.PartitionInformation.ID}}

        {{if hasServiceLabel $service "frontend.rule"}}
          [frontends."{{$service.Name}}/{{$partitionId}}"]
          backend = "{{$service.Name}}/{{$partitionId}}"
          [frontends."{{$service.Name}}/{{$partitionId}}".routes.default]
          rule = {{getServiceLabelValue $service "frontend.rule.partition.$partitionId"}}

      {{end}}
    {{end}}
  {{end}}
{{end}}
{{end}}