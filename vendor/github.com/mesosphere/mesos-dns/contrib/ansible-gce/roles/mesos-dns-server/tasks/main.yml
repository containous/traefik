---
# Playbook to install mesos-dns services on a Mesos master node
- name: Checking prerequisite packages
  apt: name=git-core state=present
  sudo: yes

- name: Checking for Go binaries
  command: test -x go/bin/go
  register: go_installed
  ignore_errors: True

- name: Installing Go
  shell: curl -s https://storage.googleapis.com/golang/go1.4.linux-amd64.tar.gz | tar xzf -
  when: go_installed|failed

- name: Checking for mesos-dns binaries
  command: test -x pkg/bin/mesos-dns
  register: mdns_installed
  ignore_errors: True

- name: Building mesos-dns binaries
  shell: mkdir -p pkg && go get github.com/miekg/dns github.com/mesosphere/mesos-dns
  environment:
    PATH: "{{ ansible_env.HOME }}/go/bin:/usr/local/bin:/usr/bin:/bin"
    GOPATH: "{{ ansible_env.HOME }}/pkg"
    GOROOT: "{{ ansible_env.HOME }}/go"
  when: mdns_installed|failed

#TODO(jdef) once mesos-dns supports ZK detection we can check for /etc/mesos/zk

- name: Examining host IP configuration
  shell: ip -o -f inet addr show
           $(ip route | grep -e ^default.via | sed -e 's/.*dev //g') |
           head -1 | awk '{ print $4; }' | cut -f1 -d/
  register: servicehost

- set_fact:
    mesos_master: "{{ servicehost.stdout }}"

- name: Configuring mesos-dns
  template: src=config.json.j2 dest={{ ansible_env.HOME }}/mesos-dns-config.json mode=0644

- name: Pushing mesos-dns artifacts to shared storage
  shell: hdfs dfs -put -f pkg/bin/mesos-dns mesos-dns-config.json /

- name: Examining known slaves
  register: selected_slave
  shell: >
    mesos state | sed -n -e '/^    "slaves":.*$/,/^    \]/{/"hostname":/p}' | sed -e 's/^.*hostname": "\([^"]\+\)",.*$/\1/g' | sort | head -1

- name: Generating Marathon deployment descriptor
  template: src=mesos-dns.json.j2 dest={{ ansible_env.HOME }}/mesos-dns-app.json mode=0644

- name: Updating mesos-dns application deployment in Marathon
  shell: >
    curl -s -XPOST -H"Content-Type: application/json" http://{{ mesos_master }}:8080/v2/apps -d@mesos-dns-app.json
